{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MissionChief Bot Getting the bot All users must sign up via the website Pay, Payment is taken monthly, but the pricing is simple- it's \u00a31 p/m per account and all done via the website above. Once you've paid you'll see new options on the dashboard, simply click \"add-user\" and add your in game name there. Download the newest release via GitHub for your operating system. Extract the bot and edit the config to add your login information Run the generator! (generate.exe/.py) The generator is required in order to create mission files, without those the bot simply won't operate. Run the bot! Main Files Main bot files MissionChiefBot - This is the main bot, this will run the despatching tasks etc. Restarter - This effectively is a cradle for the MissionChiefBot- if it major crashes (i.e exits) at all the bot will be auto restart. Usually good for people that want to run it while they're asleep etc. generate - This is in charge of grabbing new missions and the data, make sure you manually run this every time there's new missions. Config file The config file is found in the config.ini, any editiable options for the user will always be in there. File structure The bot follows a simple folder structure. The main files will always be in the main directory. Anything to do with the bot in terms of operations or missions will be found in the json folder. Missions Missions are found in the json folder, then into regions, then in your selected region, then into the missions folder. These missions are completely customizeable by the user. The bot will follow any edited missions. Links / Missing.json These files essentially tell the bot which category belongs to which vehicles. Because the game can vary in names (i.e plural non-plural) these files can be edited and changed. Running via AWS Initial Setup Sign up for AWS via here Ensure you enter your card details etc, and verify your account (dont worry, you wont be charged for the server we will be using the free tier- your card may be charged $1 to verify your card) Once you're in go to your console via this link In the find services search, type in EC2 and click it- or if you don't have this click Launch a virtual machine it'll do the same thing. Check on the top right that your region is correct for where you live- I.E UK would be London etc. In the top search type in Docker and click enter. You should see something similar to Amazon Linux AMI 2018.03.0 (HVM ensure that it says FREE TIER ELIGIBLE at the bottom. This will make sure it's free. Click select on the right hand side. Click the free tier eligible instance, for me it's t2.micro ensure it's selected and click Review and launch instance Click launch Click create a key pair - enter a random name and download the file KEEP THIS FILE SAFE Click view instances Wait around 4 minutes for the instance to get started. Connecting to your EC2 instance Assuming you're still on the instance page, click the instance you just made and click connect at the top The easiest thing to do is click EC2 Instance Connect (browser-based SSH connection) this will connect you to the server via the browser-- or the alternative it to use PuTTY (If you don't want to use PuTTY skip to number 10) continue below on how to use PuTTY So, you want to use PuTTY, first thing first download PuTTY- and install it. Once installed open PuTTYgen, and click load then select your .pem key you saved earlier. Make sure you change the file type to all Click save private key and save it to somewhere you know... Now open PuTTY, on the left hand side go to connection -> ssh and then auth. Under private key file click browse, and select the file you just made. Now, finally we can go back to Amazon, click connect again and this time click a standalone SSH client you'll see a name similar to ec-23-23232332.compute.amazonaws.com copy this name go back to Putty and go to Session on the left hand side at the top. Paste the name into there and then-- click connect. Your black box will say login as: just type in ec2-user and click enter. You're in! Type sudo yum update -y and click enter, then do sudo yum install docker -y Type sudo service docker start and let it complete. Then do sudo usermod -a -G docker ec2-user Bot installation Once you're in type in sudo docker pull jjbayliss/mission-chief-v2 , let it run it'll set up the image for the bot. Once the image is done simply run sudo docker run -it -d jjbayliss/mission-chief-v2 . This will create a container for you. Run sudo docker ps -a and copy the name of your container there should only be one, then run sudo docker exec -it [container name] bash this will take you into the container in a bash. You should be brought straight into a container, all you'll need to do is cd Mission-Chief-Bot type git checkout -f followed by git pull origin mac this will update the bot to the newest version. Next do vim config.ini you'll want to press the I key to edit the document, and add your username, password and region etc. Once done press ESC and type :wq this will save the document. Run python3.9 MissionChiefBot.py to run the base bot, and you're done! To exit the docker container press CTRL + D , and if you need to enter the bot again just follow from step 6. Running the bot on Digital Ocean Sign Up First of all I'd recommened setting up a Digital Ocean account, or any other cloud provider that you can use Docker with. You can set an account for Digital Ocean here (It's a referral link) (Make sure you install docker if you're going outside of DO) Once you've signed up to Digital Ocean simply create a droplet. You can install docker straight to it via the marketplace so i'd suggest doing that. (You can use any droplet, this will work on the smallest $5 A month one) Installing the bot to the droplet Connect into the droplet, you can do this via going to the Access Console or alternatively SSH into the droplet. Once you're in type in docker pull jjbayliss/mission-chief-v2 , let it run it'll set up the image for the bot. Once the image is done simply run docker run -it -d jjbayliss/mission-chief-v2 . This will create a container for you. Run docker ps -a and copy the name of your container there should only be one, then run docker exec -it [container name] bash this will take you into the container in a bash. You should be brought straight into a container, all you'll need to do is cd Mission-Chief-Bot type git checkout -f followed by git pull origin mac this will update the bot to the newest version. Next do vim config.ini you'll want to press the I key to edit the document, and add your username, password and region etc. Once done press ESC and type :wq this will save the document. Run python3.9 MissionChiefBot.py to run the base bot, and you're done! (bare in mind you'll need to run git pull to update the repo) To exit the docker container press CTRL + D , and if you need to enter the bot again just follow from step 6.","title":"Home"},{"location":"#welcome-to-missionchief-bot","text":"","title":"Welcome to MissionChief Bot"},{"location":"#getting-the-bot","text":"All users must sign up via the website Pay, Payment is taken monthly, but the pricing is simple- it's \u00a31 p/m per account and all done via the website above. Once you've paid you'll see new options on the dashboard, simply click \"add-user\" and add your in game name there. Download the newest release via GitHub for your operating system. Extract the bot and edit the config to add your login information Run the generator! (generate.exe/.py) The generator is required in order to create mission files, without those the bot simply won't operate. Run the bot!","title":"Getting the bot"},{"location":"#main-files","text":"","title":"Main Files"},{"location":"#main-bot-files","text":"MissionChiefBot - This is the main bot, this will run the despatching tasks etc. Restarter - This effectively is a cradle for the MissionChiefBot- if it major crashes (i.e exits) at all the bot will be auto restart. Usually good for people that want to run it while they're asleep etc. generate - This is in charge of grabbing new missions and the data, make sure you manually run this every time there's new missions.","title":"Main bot files"},{"location":"#config-file","text":"The config file is found in the config.ini, any editiable options for the user will always be in there.","title":"Config file"},{"location":"#file-structure","text":"The bot follows a simple folder structure. The main files will always be in the main directory. Anything to do with the bot in terms of operations or missions will be found in the json folder.","title":"File structure"},{"location":"#missions","text":"Missions are found in the json folder, then into regions, then in your selected region, then into the missions folder. These missions are completely customizeable by the user. The bot will follow any edited missions.","title":"Missions"},{"location":"#links-missingjson","text":"These files essentially tell the bot which category belongs to which vehicles. Because the game can vary in names (i.e plural non-plural) these files can be edited and changed.","title":"Links / Missing.json"},{"location":"#running-via-aws","text":"","title":"Running via AWS"},{"location":"#initial-setup","text":"Sign up for AWS via here Ensure you enter your card details etc, and verify your account (dont worry, you wont be charged for the server we will be using the free tier- your card may be charged $1 to verify your card) Once you're in go to your console via this link In the find services search, type in EC2 and click it- or if you don't have this click Launch a virtual machine it'll do the same thing. Check on the top right that your region is correct for where you live- I.E UK would be London etc. In the top search type in Docker and click enter. You should see something similar to Amazon Linux AMI 2018.03.0 (HVM ensure that it says FREE TIER ELIGIBLE at the bottom. This will make sure it's free. Click select on the right hand side. Click the free tier eligible instance, for me it's t2.micro ensure it's selected and click Review and launch instance Click launch Click create a key pair - enter a random name and download the file KEEP THIS FILE SAFE Click view instances Wait around 4 minutes for the instance to get started.","title":"Initial Setup"},{"location":"#connecting-to-your-ec2-instance","text":"Assuming you're still on the instance page, click the instance you just made and click connect at the top The easiest thing to do is click EC2 Instance Connect (browser-based SSH connection) this will connect you to the server via the browser-- or the alternative it to use PuTTY (If you don't want to use PuTTY skip to number 10) continue below on how to use PuTTY So, you want to use PuTTY, first thing first download PuTTY- and install it. Once installed open PuTTYgen, and click load then select your .pem key you saved earlier. Make sure you change the file type to all Click save private key and save it to somewhere you know... Now open PuTTY, on the left hand side go to connection -> ssh and then auth. Under private key file click browse, and select the file you just made. Now, finally we can go back to Amazon, click connect again and this time click a standalone SSH client you'll see a name similar to ec-23-23232332.compute.amazonaws.com copy this name go back to Putty and go to Session on the left hand side at the top. Paste the name into there and then-- click connect. Your black box will say login as: just type in ec2-user and click enter. You're in! Type sudo yum update -y and click enter, then do sudo yum install docker -y Type sudo service docker start and let it complete. Then do sudo usermod -a -G docker ec2-user","title":"Connecting to your EC2 instance"},{"location":"#bot-installation","text":"Once you're in type in sudo docker pull jjbayliss/mission-chief-v2 , let it run it'll set up the image for the bot. Once the image is done simply run sudo docker run -it -d jjbayliss/mission-chief-v2 . This will create a container for you. Run sudo docker ps -a and copy the name of your container there should only be one, then run sudo docker exec -it [container name] bash this will take you into the container in a bash. You should be brought straight into a container, all you'll need to do is cd Mission-Chief-Bot type git checkout -f followed by git pull origin mac this will update the bot to the newest version. Next do vim config.ini you'll want to press the I key to edit the document, and add your username, password and region etc. Once done press ESC and type :wq this will save the document. Run python3.9 MissionChiefBot.py to run the base bot, and you're done! To exit the docker container press CTRL + D , and if you need to enter the bot again just follow from step 6.","title":"Bot installation"},{"location":"#running-the-bot-on-digital-ocean","text":"","title":"Running the bot on Digital Ocean"},{"location":"#sign-up","text":"First of all I'd recommened setting up a Digital Ocean account, or any other cloud provider that you can use Docker with. You can set an account for Digital Ocean here (It's a referral link) (Make sure you install docker if you're going outside of DO) Once you've signed up to Digital Ocean simply create a droplet. You can install docker straight to it via the marketplace so i'd suggest doing that. (You can use any droplet, this will work on the smallest $5 A month one)","title":"Sign Up"},{"location":"#installing-the-bot-to-the-droplet","text":"Connect into the droplet, you can do this via going to the Access Console or alternatively SSH into the droplet. Once you're in type in docker pull jjbayliss/mission-chief-v2 , let it run it'll set up the image for the bot. Once the image is done simply run docker run -it -d jjbayliss/mission-chief-v2 . This will create a container for you. Run docker ps -a and copy the name of your container there should only be one, then run docker exec -it [container name] bash this will take you into the container in a bash. You should be brought straight into a container, all you'll need to do is cd Mission-Chief-Bot type git checkout -f followed by git pull origin mac this will update the bot to the newest version. Next do vim config.ini you'll want to press the I key to edit the document, and add your username, password and region etc. Once done press ESC and type :wq this will save the document. Run python3.9 MissionChiefBot.py to run the base bot, and you're done! (bare in mind you'll need to run git pull to update the repo) To exit the docker container press CTRL + D , and if you need to enter the bot again just follow from step 6.","title":"Installing the bot to the droplet"}]}